<?xml version='1.0' encoding='UTF-8'?>
<!-- Copyright 2010 Västra Götalandsregionen This library is free software; you can redistribute it and/or modify it 
  under the terms of version 2.1 of the GNU Lesser General Public License as published by the Free Software Foundation. 
  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. 
  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the 
  Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA -->

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee "
         version="2.4">

  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>false</param-value>
    </init-param>
  </filter>

  <filter>
    <filter-name>originHeaderFilter</filter-name>
    <filter-class>se.vgregion.ifeed.webcomp.filter.OriginHeaderFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>originHeaderFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--
  <servlet>
    <servlet-name>uncacher</servlet-name>
    <servlet-class>se.vgregion.ifeed.webcomp.filter.UnchaceJson</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>uncacher</servlet-name>
    <url-pattern>/uncache/*</url-pattern>
  </servlet-mapping>
  -->

  <servlet>
    <!--<servlet-name>view</servlet-name>
    <servlet-class>org.springframework.web.servlet.ViewRendererServlet</servlet-class>
    <load-on-startup>1</load-on-startup>-->

    <init-param>
      <param-name>keystoreLocation</param-name>
      <param-value>~/.hotell/ifeed/keystore</param-value>
    </init-param>

    <init-param>
      <param-name>keystorePassword</param-name>
      <param-value>changeit</param-value>
    </init-param>

    <init-param>
      <param-name>javax.net.ssl.keyStorePassword</param-name>
      <param-value>changeit</param-value>
    </init-param>

    <init-param>
      <param-name>javax.net.ssl.trustStorePassword</param-name>
      <param-value>changeit</param-value>
    </init-param>

    <init-param>
      <param-name>javax.net.ssl.keyStore</param-name>
      <param-value>~/.hotell/ifeed/keystore</param-value>
    </init-param>

  </servlet>

  <servlet-mapping>
    <servlet-name>view</servlet-name>
    <url-pattern>/WEB-INF/servlet/view</url-pattern>
  </servlet-mapping>

  <!--<resource-ref>
    <description>LiferayPool Datasource</description>
    <res-ref-name>jdbc/HotellDbPool</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>-->

  <session-config>
    <session-timeout>120</session-timeout>
  </session-config>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath*:/applicationContext.xml
    </param-value>
  </context-param>

  <!--  <context-param>
        <param-name>com.sun.faces.expressionFactory</param-name>
        <param-value>com.sun.el.ExpressionFactoryImpl</param-value>
    </context-param>-->

  <context-param>
    <param-name>javax.faces.CONFIG_FILES</param-name>
    <param-value>/WEB-INF/faces-config.xml</param-value>
  </context-param>
  <context-param>
    <param-name>javax.faces.PROJECT_STAGE</param-name>
    <!--<param-value>Development</param-value>-->
    <param-value>Production</param-value>
  </context-param>
  <context-param>
    <param-name>javax.faces.PARTIAL_STATE_SAVING</param-name>
    <param-value>false</param-value>
  </context-param>

  <!--
    Since the solr-library prepares to use ssl default (even thou this applications does not use that)
    it demands the presence of a default key store and trust store password. Not ideal.
  -->

  <env-entry>
    <env-entry-name>javax.net.ssl.keyStorePassword</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>changeit</env-entry-value>
  </env-entry>

  <env-entry>
    <env-entry-name>javax.net.ssl.trustStorePassword</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>changeit</env-entry-value>
  </env-entry>

  <!-- Removed this to avoid ERROR: MAC did not verify! -->
  <!--<context-param>
      <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
      <param-value>client</param-value>
  </context-param>-->

  <!--<servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.xhtml</url-pattern>
  </servlet-mapping>-->

  <!-- To override Primefaces own theme -->
  <context-param>
    <param-name>primefaces.THEME</param-name>
    <param-value>none</param-value>
  </context-param>

  <context-param>
    <param-name>javax.faces.FACELETS_LIBRARIES</param-name>
    <param-value>/WEB-INF/tld/xhtml-tags.taglib.xml</param-value>
  </context-param>

</web-app>
