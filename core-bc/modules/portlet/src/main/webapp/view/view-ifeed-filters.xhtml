<?xml version="1.0" encoding="UTF-8"?>

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html" xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
>

    <div class="container-fluid">
        <h3 style="display: inline;">
            Filter:
        </h3>

        <ui:repeat value="#{iFeedModelBean.toConditionText()}" var="tc"
                   id="tc1" rendered="#{not app.inEditMode or iFeedModelBean.filterChangeLock}">
            <span class="ltr-flowing-item ifeed-border" style="white-space: inherit;">
                #{tc}
            </span>
        </ui:repeat>

        <ui:repeat value="#{iFeedModelBean.getFiltersAsList()}" var="getFiltersAsListItem" varStatus="status"
                   id="getFiltersAsListRepeat" rendered="#{app.inEditMode and not iFeedModelBean.filterChangeLock}">
    <span class="ltr-flowing-item ifeed-border"
          style="#{(getFiltersAsListItem.isContainer() || !app.isFilter(getFiltersAsListItem)) ?'display:none;':''}">
      <span class="name">#{app.getFilterName(getFiltersAsListItem)}</span>

      <span class="name-value-delimiter">
        <h:outputText value="="
                      rendered="#{getFiltersAsListItem.operator eq 'matching' or empty getFiltersAsListItem.operator}"/>
        <h:outputText value="&lt;" rendered="#{getFiltersAsListItem.operator eq 'lesser'}"/>
        <h:outputText value="&gt;" rendered="#{getFiltersAsListItem.operator eq 'greater'}"/>
      </span>
      <span>#{empty getFiltersAsListItem.filterQueryForDisplay ? getFiltersAsListItem.filterQuery : getFiltersAsListItem.filterQueryForDisplay}</span>

      <span class="edit">
        <p:commandLink styleClass="link-button-edit" value=" " update=":ifeed_view"
                       style="color: white;"
                       rendered="#{app.inEditMode}"
                       ajax="false" async="true"
                       action="#{app.editFilterValue(getFiltersAsListItem)}"
                       action-former="#{app.editFilterValue(getFiltersAsListItem)}">
        </p:commandLink>
      </span>

      <span class="remove">
        <p:commandLink styleClass="link-button-trash" value=" " update=":ifeed_view"
                       style="color: white;"
                       rendered="#{app.inEditMode}"
                       ajax="false" async="true"
                       action="#{iFeedModelBean.removeFilter(getFiltersAsListItem)}">
        </p:commandLink>
      </span>
    </span>
            <!--<span class="ltr-flowing-item ifeed-border"
                  style="#{!getFiltersAsListItem.isContainer()?'display:none;':'white-space: inherit;'}">
                #{getFiltersAsListItem.toText()}
            </span>-->
        </ui:repeat>
    </div>

    <ul style="list-style-type:circle; font-weight: bold;">
        <ui:repeat value="#{iFeedModelBean.getFieldInfsWithMultipleFilters()}" var="multi">
            <li>
                <span>Specificera urval mellan värden i <i>'#{multi.name}'</i></span>

                <h:panelGroup rendered="#{app.inEditMode and not iFeedModelBean.filterChangeLock}">
                    <h:panelGroup rendered="#{iFeedModelBean.isUsingAnd(multi)}">
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="true" checked="checked">
                            Använd 'och'
                        </input>
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="true"
                               onclick="document.getElementsByClassName('toggleAndFor')[0].click()">
                            Använd 'eller'
                        </input>
                    </h:panelGroup>
                    <h:panelGroup rendered="#{not iFeedModelBean.isUsingAnd(multi)}">
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="false"
                               onclick="document.getElementsByClassName('toggleAndFor')[0].click()">
                            Använd 'och'
                        </input>
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="true" checked="checked">
                            Använd 'eller'
                        </input>
                    </h:panelGroup>
                </h:panelGroup>

                <h:panelGroup rendered="#{not app.inEditMode or iFeedModelBean.filterChangeLock}">
                    <h:panelGroup rendered="#{iFeedModelBean.isUsingAnd(multi)}">
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="true" checked="checked" disabled="disabled">
                            Använd 'och'
                        </input>
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="false" disabled="disabled">
                            Använd 'eller'
                        </input>
                    </h:panelGroup>
                    <h:panelGroup rendered="#{not iFeedModelBean.isUsingAnd(multi)}">
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="true" disabled="disabled">
                            Använd 'och'
                        </input>
                        <input type="radio" property="notify" name="yesNoToggleAndFor" value="false" checked="checked" disabled="disabled">
                            Använd 'eller'
                        </input>
                    </h:panelGroup>
                </h:panelGroup>

                <p:commandLink styleClass="link-button-edit toggleAndFor"
                               style="display: none"
                               value="#{iFeedModelBean.isUsingAnd(multi) ? 'Ja.' : 'Nej.'}"
                               update=":ifeed_view"
                               ajax="false" async="true"
                               rendered="#{app.inEditMode}"
                               action="#{iFeedModelBean.putValueIntoFiltersUsingAnd(multi, not iFeedModelBean.isUsingAnd(multi))}">
                </p:commandLink>

            </li>
        </ui:repeat>
    </ul>

</ui:composition>
